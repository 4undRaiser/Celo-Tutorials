{"version":3,"sources":["components/home.js","components/Properties.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","image","setImage","location","setLocation","price","setPrice","show","setShow","handleClose","Navbar","bg","Container","Brand","href","Toggle","Nav","className","Badge","cUSDBalance","Collapse","Button","onClick","variant","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","target","value","placeholder","Footer","disabled","addProperty","Properties","newprices","setNewPrices","prices","setPrices","Row","xs","md","properties","map","property","Col","Card","Stack","direction","gap","id","src","alt","style","objectFit","forSale","owner","walletAddress","withdrawSale","class","newPrices","changePrice","salePrices","console","log","sellProperty","buyProperty","contractAddress","App","contract","setcontract","address","setAddress","kit","setKit","setcUSDBalance","setProperties","connectToWallet","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","alert","getBalance","useCallback","getTotalBalance","balance","USDBalance","cUSD","shiftedBy","toFixed","Contract","RealEstateMarketplace","getProperties","nfts","methods","getAllProperties","call","nftsLength","i","nft","Promise","resolve","getProperty","index","push","Number","all","_nfts","_image","_location","_price","BigNumber","toString","registerProperty","send","from","_index","_newPrice","newprice","updatePropertyPrice","_sellPrice","sellprice","putPropertyForSale","withdrawProperty","cUSDContract","IERC","approve","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y8UA+GeA,EAlGF,SAACC,GACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAKA,EAAwBN,oBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,qCACE,cAACE,EAAA,EAAD,CAAQC,GAAG,QAAX,SACE,eAACC,EAAA,EAAD,WACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,qCACA,cAACJ,EAAA,EAAOK,OAAR,IACA,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,SACE,eAACC,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,qBACWlB,EAAMoB,YADjB,YAIF,cAACT,EAAA,EAAOU,SAAR,CAAiBH,UAAU,sBAA3B,SACE,cAACI,EAAA,EAAD,CAAQC,QAdC,kBAAMd,GAAQ,IAcMe,QAAQ,OAArC,SACE,yDAMR,eAACC,EAAA,EAAD,CAAOjB,KAAMA,EAAMkB,OAAQhB,EAAaiB,UAAQ,EAAhD,UACE,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,6BAEF,cAACC,EAAA,EAAD,UACE,eAACN,EAAA,EAAMO,KAAP,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,QACNjB,UAAU,OAHZ,SAKE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,SAAU,SAACC,GACTpC,EAASoC,EAAEC,OAAOC,QAEpBC,YAAY,YAIhB,cAACT,EAAA,EAAD,CACEC,UAAU,gBACVC,MAAM,WACNjB,UAAU,OAHZ,SAKE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,SAAU,SAACC,GACTlC,EAAYkC,EAAEC,OAAOC,QAEvBC,YAAY,qBAKhB,cAACT,EAAA,EAAD,CAAeC,UAAU,aAAaC,MAAM,QAAQjB,UAAU,OAA9D,SACE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,SACLC,SAAU,SAACC,GACThC,EAASgC,EAAEC,OAAOC,QAEpBC,YAAY,uBAKpB,eAACjB,EAAA,EAAMkB,OAAP,WACE,cAACrB,EAAA,EAAD,CAAQE,QAAQ,oBAAoBD,QAASb,EAA7C,mBAGA,cAACY,EAAA,EAAD,CACEE,QAAQ,OACRoB,WA9EiB1C,GAASE,GAAYE,GA+EtCiB,QAAS,WACPvB,EAAM6C,YAAY3C,EAAOE,EAAUE,GACnCI,KALJ,wC,4CC3FGoC,EAAa,SAAC9C,GACzB,MAAkCC,mBAAS,IAA3C,mBAAO8C,EAAP,KAAkBC,EAAlB,KACA,EAA4B/C,mBAAS,IAArC,mBAAOgD,EAAP,KAAeC,EAAf,KAEA,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGnC,UAAU,MAA7B,SACGlB,EAAMsD,WAAWC,KAAI,SAACC,GAAD,OACpB,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMxC,UAAU,QAAhB,UACE,cAACwC,EAAA,EAAK9B,OAAN,UACE,eAAC+B,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAnC,UACE,eAAC1C,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,UACGsC,EAASM,GADZ,SAIA,eAAC3C,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,UACGsC,EAASlD,MAAS,KADrB,gBAMJ,qBAAKY,UAAU,mBAAf,SACE,qBACE6C,IAAKP,EAAStD,MACd8D,IAAKR,EAASpD,SACd6D,MAAO,CAAEC,UAAW,aAIxB,eAACR,EAAA,EAAK1B,KAAN,CAAWd,UAAU,kCAArB,UAEA,cAACwC,EAAA,EAAK5B,MAAN,CAAYZ,UAAU,cAAtB,SACGsC,EAASpD,WAGV,cAACe,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,SACKsC,EAASW,QAAU,UAAY,gBAIpCX,EAASY,QAAUpE,EAAMqE,gBAAsC,IAArBb,EAASW,SACnD,wBACM9B,KAAK,SACLd,QAAS,kBAAMvB,EAAMsE,aAAad,EAASM,KAC3CS,MAAM,2BAHZ,2BAUHf,EAASY,QAAUpE,EAAMqE,eACtB,+BACE,sBAAKE,MAAM,SAAX,UACE,uBACElC,KAAK,SACLkC,MAAM,oBACN9B,MAAOM,EAAUS,EAASM,KAAO,GACjCxB,SAAU,SAACC,GACT,IAAMiC,EAAS,YAAOzB,GACtByB,EAAUhB,EAASM,IAAMvB,EAAEC,OAAOC,MAClCO,EAAawB,IAEf9B,YAAY,oBAEd,wBACEL,KAAK,SACLd,QAAS,kBAAMvB,EAAMyE,YAAYjB,EAASM,GAAIf,EAAUS,EAASM,MACjES,MAAM,2BAHR,+BAWRf,EAASY,QAAUpE,EAAMqE,gBAAsC,IAArBb,EAASW,SAC/C,+BACE,sBAAKI,MAAM,SAAX,UACE,uBACElC,KAAK,SACLkC,MAAM,oBACN9B,MAAOQ,EAAOO,EAASM,KAAO,GAC9BxB,SAAU,SAACC,GACT,IAAMmC,EAAU,YAAOzB,GACvByB,EAAWlB,EAASM,IAAMvB,EAAEC,OAAOC,MACnCS,EAAUwB,IAEZhC,YAAY,gBAGd,wBACEL,KAAK,SACLd,QAAS,WACPoD,QAAQC,IAAI,wBAAyBpB,EAASM,GAAI,IAAKb,EAAOO,EAASM,KACvE9D,EAAM6E,aAAarB,EAASM,GAAIb,EAAOO,EAASM,MAElDS,MAAM,oBANR,gCAcJf,EAASY,QAAUpE,EAAMqE,gBAAsC,IAArBb,EAASW,SAE/C,wBACE9B,KAAK,SACLd,QAAS,kBAAMvB,EAAM8E,YAAYtB,EAASM,KAC1CS,MAAM,oBAHR,iCApGAf,EAASM,U,8DCCrBiB,EAAkB,6CA2KTC,MAxKf,WACE,MAAgC/E,mBAAS,MAAzC,mBAAOgF,EAAP,KAAiBC,EAAjB,KACA,EAA8BjF,mBAAS,MAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KACA,EAAsBnF,mBAAS,MAA/B,mBAAOoF,EAAP,KAAYC,EAAZ,KACA,EAAsCrF,mBAAS,GAA/C,mBAAOmB,EAAP,KAAoBmE,EAApB,KACA,EAAoCtF,mBAAS,IAA7C,mBAAOqD,EAAP,KAAmBkC,EAAnB,KAEMC,EAAe,uCAAG,kCAAAC,EAAA,0DAClBC,OAAOC,KADW,0CAGZD,OAAOC,KAAKC,SAHA,cAIZC,EAAO,IAAIC,IAAKJ,OAAOC,MACzBP,EAAMW,yBAAeF,GALP,SAOKT,EAAIS,KAAKG,IAAIC,cAPlB,cAOZC,EAPY,OAQZC,EAAeD,EAAS,GAC9Bd,EAAIgB,eAAiBD,EATH,UAWZhB,EAAWgB,GAXC,yBAYZd,EAAOD,GAZK,0DAclBV,QAAQC,IAAR,MAdkB,gCAiBpB0B,MAAM,kBAjBc,0DAAH,qDAqBfC,EAAaC,sBAAW,sBAAC,gCAAAd,EAAA,+EAELL,EAAIoB,gBAAgBtB,GAFf,OAErBuB,EAFqB,OAGrBC,EAAaD,EAAQE,KAAKC,WAnCf,IAmC0CC,QAAQ,GAE7D7B,EAAW,IAAII,EAAIS,KAAKG,IAAIc,SAASC,EAAuBjC,GAClEG,EAAYD,GACZM,EAAeoB,GAPY,kDAS3BhC,QAAQC,IAAR,MAT2B,0DAW5B,CAACO,EAASE,IAEP4B,EAAa,uCAAG,oCAAAvB,EAAA,sEAEZwB,EAAO,GAFK,SAGOjC,EAASkC,QAC/BC,mBACAC,OALe,OAOlB,IAJMC,EAHY,kBAOTC,GACP,IAAMC,EAAM,IAAIC,QAAJ,uCAAY,WAAOC,GAAP,eAAAhC,EAAA,sEACCT,EAASkC,QAC7BQ,YAAYJ,GACZF,OAHmB,OAChB7D,EADgB,OAItBkE,EAAQ,CACNE,MAAOL,EACPrH,MAAOsD,EAAStD,MAChBE,SAAUoD,EAASpD,SACnB0D,GAAIN,EAASM,GACbxD,MAAOkD,EAASlD,MAChB8D,MAAOZ,EAASY,MAChBD,QAASX,EAASW,UAXE,2CAAZ,uDAcZ+C,EAAKW,KAAKL,IAfHD,EAAI,EAAGA,GAAKO,OAAOR,GAAaC,IAAM,EAAtCA,GAPS,gBAwBEE,QAAQM,IAAIb,GAxBd,OAwBZc,EAxBY,OAyBlBxC,EAAcwC,GAzBI,kDA2BlBrD,QAAQC,IAAI,CAAErC,EAAC,OA3BG,0DAAH,qDA+BbM,EAAW,uCAAG,WAAOoF,EAAQC,EAAWC,GAA1B,eAAAzC,EAAA,6DACdpF,EAAQ,IAAI8H,IAAUD,GAAQtB,UA7Ef,IA6EyCwB,WAD1C,kBAGVpD,EAASkC,QACZmB,iBAAiBL,EAAQC,EAAW5H,GACpCiI,KAAK,CAAEC,KAAMrD,IALA,OAMhB8B,IANgB,gDAQhBX,MAAM,EAAD,IARW,yDAAH,0DAYX7B,EAAW,uCAAG,WAAOgE,EAAQC,GAAf,eAAAhD,EAAA,6DACdiD,EAAW,IAAIP,IAAUM,GAAW7B,UAzFrB,IAyF+CwB,WADhD,kBAGVpD,EAASkC,QACZyB,oBAAoBH,EAAQE,GAC5BJ,KAAK,CAAEC,KAAMrD,IALA,OAMhB8B,IANgB,gDAQhBX,MAAM,EAAD,IARW,yDAAH,wDAYXzB,EAAY,uCAAG,WAAO4D,EAAQI,GAAf,eAAAnD,EAAA,6DACfoD,EAAY,IAAIV,IAAUS,GAAYhC,UArGvB,IAqGiDwB,WADjD,kBAGXpD,EAASkC,QACZ4B,mBAAmBN,EAAQK,GAC3BP,KAAK,CAAEC,KAAMrD,IALC,OAMjB8B,IANiB,gDAQjBX,MAAM,EAAD,IARY,yDAAH,wDAYZhC,EAAY,uCAAG,WAAOmE,GAAP,SAAA/C,EAAA,+EAEXT,EAASkC,QACZ6B,iBAAiBP,GACjBF,KAAK,CAAEC,KAAMrD,IAJC,OAKjB8B,IALiB,+CAOjBX,MAAM,EAAD,IAPY,wDAAH,sDAWZxB,EAAW,uCAAG,WAAO2D,GAAP,eAAA/C,EAAA,sEAEVuD,EAAe,IAAI5D,EAAIS,KAAKG,IAAIc,SAASmC,EA3HzB,8CAyHN,SAIVD,EAAa9B,QAChBgC,QAAQpE,EAAiBzB,EAAWmF,GAAQnI,OAC5CiI,KAAK,CAAEC,KAAMrD,IANA,uBAOVF,EAASkC,QACZrC,YAAY2D,GACZF,KAAK,CAAEC,KAAMrD,IATA,OAUhB8B,IACAV,IACAD,MAAM,gDAZU,kDAchBA,MAAM,EAAD,IAdW,0DAAH,sDAkCjB,OAhBA8C,qBAAU,WACR3D,MACC,IAEH2D,qBAAU,WACJ/D,GAAOF,GACToB,MAED,CAAClB,EAAKF,EAASoB,IAElB6C,qBAAU,WACJnE,GACFgC,MAED,CAAChC,EAAUgC,IAGZ,sBAAK/F,UAAU,MAAf,UACE,cAAC,EAAD,CAAME,YAAaA,EAAayB,YAAaA,IAC7C,cAAC,EAAD,CACES,WAAYA,EACZmB,YAAaA,EACbI,aAAcA,EACdP,aAAcA,EACdD,cAAec,EACfL,YAAaA,QCrKNuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35ca0204.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FloatingLabel,\r\n  Nav,\r\n  Badge,\r\n  Container,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\n\r\nconst Home = (props) => {\r\n  const [image, setImage] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n\r\n\r\n  const isFormFilled = () => image && location && price;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Real Estate Marketplace</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Nav className=\"me-auto\">\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              Balance {props.cUSDBalance}cUSD\r\n            </Badge>\r\n          </Nav>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button onClick={handleShow} variant=\"dark\">\r\n              <h5> New Property </h5>\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Property</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputImage\"\r\n              label=\"Image\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n                placeholder=\"Image\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputLocation\"\r\n              label=\"location\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setLocation(e.target.value);\r\n                }}\r\n                placeholder=\"Enter Location\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n\r\n            <FloatingLabel controlId=\"inputPrice\" label=\"price\" className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n                placeholder=\"Enter price\"\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              props.addProperty(image, location, price);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Add new property\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Card, Badge, Col, Stack, Row } from \"react-bootstrap\";\r\n\r\nexport const Properties = (props) => {\r\n  const [newprices, setNewPrices] = useState([]);\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  return (\r\n    <Row xs={1} md={3} className=\"g-4\">\r\n      {props.properties.map((property) => (\r\n        <Col key={property.id}>\r\n          <Card className=\"h-100\">\r\n            <Card.Header>\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {property.id} ID\r\n                </Badge>\r\n\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {property.price  / 1000000000000000000} cUSD\r\n                </Badge>\r\n              </Stack>\r\n            </Card.Header>\r\n\r\n            <div className=\" ratio ratio-4x3\">\r\n              <img\r\n                src={property.image}\r\n                alt={property.location}\r\n                style={{ objectFit: \"cover\" }}\r\n              />\r\n            </div>\r\n\r\n            <Card.Body className=\"d-flex  flex-column text-center\">\r\n\r\n            <Card.Title className=\"flex-grow-1\">\r\n              {property.location}\r\n              </Card.Title>\r\n\r\n              <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {property.forSale ? \"Forsale\" : \"Not Forsale\"}\r\n                </Badge>\r\n\r\n\r\n             {property.owner === props.walletAddress && property.forSale === true && (\r\n              <button\r\n                    type=\"button\"\r\n                    onClick={() => props.withdrawSale(property.id)}\r\n                    class=\"btn btn-dark btn-sm mt-1\"\r\n                  >\r\n                    withdraw sale\r\n                  </button>\r\n              )}\r\n           \r\n\r\n         { property.owner === props.walletAddress &&(\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control mt-3\"\r\n                    value={newprices[property.id] || \"\"}\r\n                    onChange={(e) => {\r\n                      const newPrices = [...newprices];\r\n                      newPrices[property.id] = e.target.value;\r\n                      setNewPrices(newPrices);\r\n                    }}\r\n                    placeholder=\"Enter new price\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.changePrice(property.id, newprices[property.id])}\r\n                    class=\"btn btn-dark btn-sm mt-1\"\r\n                  >\r\n                    Change Price\r\n                  </button>\r\n                </div>\r\n              </form>\r\n             )}\r\n\r\n        { property.owner === props.walletAddress && property.forSale === false && (\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control mt-3\"\r\n                    value={prices[property.id] || \"\"}\r\n                    onChange={(e) => {\r\n                      const salePrices = [...prices];\r\n                      salePrices[property.id] = e.target.value;\r\n                      setPrices(salePrices);\r\n                    }}\r\n                    placeholder=\"enter price\"\r\n                  />\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      console.log(\"Price for property ID\", property.id, \":\", prices[property.id]);\r\n                      props.sellProperty(property.id, prices[property.id]);\r\n                    }}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Sell property\r\n                  </button>\r\n                </div>\r\n              </form>\r\n             )}\r\n\r\n            { property.owner !== props.walletAddress && property.forSale === true && (\r\n             \r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.buyProperty(property.id)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Buy Property\r\n                  </button>\r\n               \r\n             )}\r\n\r\n             \r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport Home from \"./components/home\";\r\nimport { Properties } from \"./components/Properties\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport RealEstateMarketplace from \"./contracts/RealEstateMarketplace.abi.json\";\r\nimport IERC from \"./contracts/IERC.abi.json\";\r\n\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\nconst contractAddress = \"0x4f43Ab8Cba473D1B38C395EDF0CD5a308Dee19D7\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\nfunction App() {\r\n  const [contract, setcontract] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [kit, setKit] = useState(null);\r\n  const [cUSDBalance, setcUSDBalance] = useState(0);\r\n  const [properties, setProperties] = useState([]);\r\n\r\n  const connectToWallet = async () => {\r\n    if (window.celo) {\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const user_address = accounts[0];\r\n        kit.defaultAccount = user_address;\r\n\r\n        await setAddress(user_address);\r\n        await setKit(kit);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Error Occurred\");\r\n    }\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(address);\r\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n\r\n      const contract = new kit.web3.eth.Contract(RealEstateMarketplace, contractAddress);\r\n      setcontract(contract);\r\n      setcUSDBalance(USDBalance);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [address, kit]);\r\n\r\n  const getProperties = async () => {\r\n    try {\r\n      const nfts = [];\r\n      const nftsLength = await contract.methods\r\n        .getAllProperties()\r\n        .call();\r\n      // contract starts minting from index 1\r\n      for (let i = 1; i <= Number(nftsLength); i++) {\r\n        const nft = new Promise(async (resolve) => {\r\n          const property = await contract.methods\r\n            .getProperty(i)\r\n            .call();\r\n          resolve({\r\n            index: i,\r\n            image: property.image,\r\n            location: property.location,\r\n            id: property.id,\r\n            price: property.price,\r\n            owner: property.owner,\r\n            forSale: property.forSale,\r\n          });\r\n        });\r\n        nfts.push(nft);\r\n      }\r\n      const _nfts = await Promise.all(nfts);\r\n      setProperties(_nfts);\r\n    } catch (e) {\r\n      console.log({ e });\r\n    }\r\n  };\r\n\r\n  const addProperty = async (_image, _location, _price) => {\r\n    let price = new BigNumber(_price).shiftedBy(ERC20_DECIMALS).toString();\r\n    try {\r\n      await contract.methods\r\n        .registerProperty(_image, _location, price)\r\n        .send({ from: address });\r\n      getProperties();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const changePrice = async (_index, _newPrice) => {\r\n    let newprice = new BigNumber(_newPrice).shiftedBy(ERC20_DECIMALS).toString();\r\n    try {\r\n      await contract.methods\r\n        .updatePropertyPrice(_index, newprice)\r\n        .send({ from: address });\r\n      getProperties();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const sellProperty = async (_index, _sellPrice) => {\r\n    let sellprice = new BigNumber(_sellPrice).shiftedBy(ERC20_DECIMALS).toString();\r\n    try {\r\n      await contract.methods\r\n        .putPropertyForSale(_index, sellprice)\r\n        .send({ from: address });\r\n      getProperties();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const withdrawSale = async (_index) => {\r\n    try {\r\n      await contract.methods\r\n        .withdrawProperty(_index)\r\n        .send({ from: address });\r\n      getProperties();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const buyProperty = async (_index) => {\r\n    try {\r\n      const cUSDContract = new kit.web3.eth.Contract(IERC, cUSDContractAddress);\r\n      \r\n      await cUSDContract.methods\r\n        .approve(contractAddress, properties[_index].price)\r\n        .send({ from: address });\r\n      await contract.methods\r\n        .buyProperty(_index)\r\n        .send({ from: address });\r\n      getProperties();\r\n      getBalance();\r\n      alert(\"you have successfully sent cusd to this user\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectToWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && address) {\r\n      getBalance();\r\n    }\r\n  }, [kit, address, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (contract) {\r\n      getProperties();\r\n    }\r\n  }, [contract, getProperties]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Home cUSDBalance={cUSDBalance} addProperty={addProperty} />\r\n      <Properties\r\n        properties={properties}\r\n        changePrice={changePrice}\r\n        sellProperty={sellProperty}\r\n        withdrawSale={withdrawSale}\r\n        walletAddress={address}\r\n        buyProperty={buyProperty}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}